apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 300
        versionName "2018.10"

        resConfigs "en", "de"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
            applicationIdSuffix ".debug"
        }
        play {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        amazon {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        // Remove sample files only needed for debug
        applicationVariants.all { variant ->
            if (variant.buildType.name != 'debug') {
                variant.mergeAssets.doLast {
                    delete(fileTree(dir: variant.mergeAssets.outputDir, includes: ['sample_podcasts.json']))
                }
            }
        }
    }

    flavorDimensions "media", "edition"
    productFlavors {
        simple {
            dimension "edition"
            applicationId "net.alliknow.podcatcher"
        }
        deluxe {
            dimension "edition"
        }
        audio {
            dimension "media"
            applicationId "com.podcatcher.deluxe"
        }
        video {
            dimension "media"
            applicationId "com.podcatcher.deluxe.video"
        }
    }
    variantFilter { final variant ->
        // Ignore all variants we do not need: release and videoSimple
        if (variant.buildType.name == 'release' ||
                (variant.flavors.get(0).name == 'video' && variant.flavors.get(1).name == 'simple')) {
            variant.setIgnore(true)
        }
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:+"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'

    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0-alpha06'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    kapt 'androidx.room:room-compiler:2.1.0-alpha02'
    implementation 'androidx.room:room-runtime:2.1.0-alpha02'

    //implementation 'androidx.core:core-ktx:1.0.1'

    implementation 'android.arch.work:work-runtime-ktx:1.0.0-alpha10'

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.google.code.gson:gson:2.8.5'

    // Not sure why I would need this all of a sudden (for BaseObservable)
    implementation 'androidx.databinding:databinding-runtime:3.2.1'
    //implementation 'androidx.lifecycle:lifecycle-livedata:2.0.0'

    // Testing dependencies
    testImplementation "junit:junit:4.12"
    androidTestImplementation "androidx.arch.core:core-testing:2.0.0"
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
}
